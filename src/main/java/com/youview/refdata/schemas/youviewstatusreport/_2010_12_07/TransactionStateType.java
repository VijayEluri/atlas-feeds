//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.30 at 10:17:38 AM GMT 
//


package com.youview.refdata.schemas.youviewstatusreport._2010_12_07;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TransactionStateType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TransactionStateType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="accepted"/>
 *     &lt;enumeration value="validating"/>
 *     &lt;enumeration value="failed"/>
 *     &lt;enumeration value="quarantined"/>
 *     &lt;enumeration value="committing"/>
 *     &lt;enumeration value="committed"/>
 *     &lt;enumeration value="publishing"/>
 *     &lt;enumeration value="published"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TransactionStateType")
@XmlEnum
public enum TransactionStateType {


    /**
     * Transaction accepted for later processing.
     * 
     */
    @XmlEnumValue("accepted")
    ACCEPTED("accepted"),

    /**
     * Transaction being subjected to syntax, semantic or referential integrity validation.
     * 
     */
    @XmlEnumValue("validating")
    VALIDATING("validating"),

    /**
     * At least one Fragment in the Transaction failed syntax or semantic validation.
     * 
     */
    @XmlEnumValue("failed")
    FAILED("failed"),

    /**
     * All Fragments in the Transaction pass syntax and semantic validation but at least one Fragment lacks referential integrity.
     * 
     */
    @XmlEnumValue("quarantined")
    QUARANTINED("quarantined"),

    /**
     * Transaction passes syntax, semantic and referential integrity validation and Fragments are queued for committing to database.
     * 
     */
    @XmlEnumValue("committing")
    COMMITTING("committing"),

    /**
     * All Fragments in the Transaction are successfully committed to the database and awaiting downstream publication.
     * 
     */
    @XmlEnumValue("committed")
    COMMITTED("committed"),

    /**
     * Fragments are in the process of being published to downstream systems.
     * 
     */
    @XmlEnumValue("publishing")
    PUBLISHING("publishing"),

    /**
     * All Fragments in the Transaction have been published successfully to downstream systems.
     * 
     */
    @XmlEnumValue("published")
    PUBLISHED("published");
    private final String value;

    TransactionStateType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TransactionStateType fromValue(String v) {
        for (TransactionStateType c: TransactionStateType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
